一、HTML5的特点

HTML5发展历史：

浏览器支持情况：不同的浏览器显示的效果可能不一样。因为HTML5没有一个统一的标准，不同的浏览器解析时不一样的，现在还处于一个推广的阶段，但是大部分的是一样的。

一）、基本骨架更简单
<!doctype html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>	
</body>
</html>

二）、语法更宽松

1、元素可以省略结束标签
（1）空元素可省略结束反斜杠的元素：br、hr、img、input、link、mata 
（2）可以省略结束标签的元素：colgroup、dt、dd、li、optgroup、p、thead、tbody、tfoot、tr、td、th 
（3）可以全部省略标签的元素：html、head、body、tbody 
2、不区分大小写       <em></Em>合法
3、属性值中只要不包含受限字符（>、=或空格）就可以不加引号
4、只有属性名没有属性值也可以     checked
5、引用外部样式或者js时，type属性可省略

语法的宽松不是好事，只会带来混乱，推荐遵循以下书写规则


1、包含可选的html、head、body元素
      有助于将页面内容与其他页面信息分离

2、双标记书写结束标记

3、标签全部小写
      输入轻松，不会让人触目惊心

4、为属性加引号
     没有引号的话，一个无效字符就会破坏整个页面






三）、标签的语义化

语义化的好处：

1，去掉或者丢失样式的时候能够让页面呈现出清晰的结构

2，搜索引擎优化：搜索引擎能够更好的理解你的站点，搜索者查询就越容易与你的内容匹配，因而你的网站列在搜索结果中的可能性就越大；

3，无障碍性，方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）渲染网页，让任何人都能无障碍的访问页面；

4，便于团队开发和维护，语义化更具可读性，是下一步网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。

5，未来的功能，如果正确使用语义元素，就能够创建更清晰的页面结构，能够适应未来浏览器和web编辑工具的发展趋势。







新增标签：

<header> 头标签   
表示页面中一个内容区块或者整个页面的标题  

<nav> 导航标签
表示页面中导航链接的部分

<section> 章节、页眉、栏目
表示一段专题性的内容，一般会带有标题。应用的典型场景有文章的章节、标签对话框中的标签页、或者论文中有编号的部分。

<article>文章标签
表示页面中的一块与上下文不相关的独立内容，譬如博客中的一篇文章或者报纸中的一篇文章

<aside> 侧边栏
Aside表示acticle元素的内容之外的，与article元素的内容相关的辅助信息。

<footer>页脚  
表示整个页面或者页面中的一个内容区块的脚注。一般来说，他会包含创作者的姓名、创作日期以及创作者联系信息。

<main>主要内容
主要用于标识网页的主要内容，比如一个网页除了页眉页脚和侧边栏以外的主体部分就可以用main标签包裹。
不能在article,aside,footer,header或者nav中包含main，因为main元素的使命是页面的主要内容，而不是文章的主要内容，换句话说，也就是一个页面只能有一个main标签。


<figure>
表示一段独立的内容，一般表示文档主体流内容中的一个独立单元。
使用figcaption元素为figure元素添加标题。
figure是一种元素的组合，带有可选标题。用来表示网页上一块独立的内容。
figcaption表示 figure 的标题。
从属于figure，并且figure中只能放置一个figcaption




<video>标记定义一个视频

<video src="movie.ogg" controls="controls">
您的浏览器不支持 video 标签。
</video>

属性	值	描述
autoplay	autoplay	如果出现该属性，则视频在就绪后马上播放。
controls	controls	如果出现该属性，则向用户显示控件，比如播放按钮。
loop	loop	如果出现该属性，则当媒介文件完成播放后再次开始播放。
src	url	要播放的视频的 URL。

一共支持三种格式： Ogg、MPEG4、WebM。但这三种格式对于浏览器的兼容性却各不同。
Internet Explorer 8 以及更早的版本不支持 <video> 标签。

格式          IE       Firefox      Opera      Chrome       Safari
Ogg         No      3.5+         10.5+       5.0+             No
MPEG4    9.0+    No             No          5.0+             3.0+
WebM     No       4.0+        10.6+        6.0+             No

<audio>标记定义一个音频
<audio src="someaudio.wav">
	您的浏览器不支持 audio 标签。
</audio>

属性	值	描述
autoplay	autoplay	如果出现该属性，则音频在就绪后马上播放。
controls	controls	如果出现该属性，则向用户显示控件，比如播放按钮。
loop	loop	如果出现该属性，则每当音频结束时重新开始播放。
src	url	要播放的音频的 URL。

不同浏览器对于html5 audio标签和音频格式的兼容性
音频格式	Chrome	Firefox	IE9	Opera	Safari
OGG	支持	支持	支持	支持	不支持
MP3	支持	不支持	支持	不支持	支持
WAV	支持	支持	不支持	支持	不支持


<source>标记定义媒体资源
<audio controls>
      <source src="horse.ogg"   type="audio/ogg">
      <source src="horse.mp3"   type="audio/mpeg">
       您的浏览器不支持 audio 标签。
</audio> 

<hgroup>用来表明标题的集合。
如果有主标题、副标题，可以使用这个来包裹一下，一般比较常见的就是网站的标题和网站描述（HTML 5.1中废除）

<dialog>标记定义一个对话框，目前只有 Chrome 和 Safari 6 支持 <dialog> 标签

盒子在窗口垂直水平居中方法二：
div{ position:fixed; width:300px; height:300px; background:#0f0; top:0; left:0; right:0; bottom:0; margin:auto;}

<embed>标记定义外部的可交互的内容或插件 .比如 flash
<embed src="helloworld.swf" />

mark
高亮显示文字，一个比较典型的应用就是在搜索结果中向用户高亮显示搜索关键词。
可设置背景色和字体颜色。

canvas
表示图形，比如图标和其他图像。这个元素本身没有行为，仅提供一块画布，但它把一个绘图API展现给客户端js，以使脚本能够把想绘制的东西绘制到这块画布上
<canvas id=“myCanvas” width=“200” height=“200”></canvas>
本块内容会在第三阶段你学完js以后学习。

details和summary折叠框
把折叠的区块放在details标签中，把标题放在summary标签中。
目前只有chrome浏览器支持，用户单击标题会把完整的内容显示出来，不支持的则上来就会显示所有内容，用户也不能把内容折叠起来。
<details>
  <summary>明天下午考试</summary>
  <p>考察**知识点，时间5:30</p>
  <p>哈哈哈</p>
</details>


改良的ol
 a、可以自定义编号 start（取值只能为数值）   
 b、可以按编号反向排序 reversed 
（从你开始的值倒数，字母没有负数，会用数字代替）  

 例：
<ol start=3>
    <li>aaaa</li>
    <li>aaaa</li>
    <li>aaaa</li>
</ol>

类型值 生成样式      序列举例 
  A    大写字母         A、B、C、D、E 
  a    小写字母          a、b、c、c、e 
  I    大写罗马数字    I、II、III、IV、V 
  i    小写罗马数字    i、ii、iii、iv、v 
  1    阿拉伯数字      1、2、3、4、5




四）浏览器的兼容---怎样让老浏览器兼容新标签
1、为语义元素添加样式
浏览器在遇到不认识的元素时，会把他们当成内联元素。
CSS样式中添加一条“超级规则”：
<style>
   	article, aside, canvas, details, figcaption, figure,
    	footer, header, menu, nav, section, summary
    	{
    		display: block;
    	}
</style>

2、使用HTML5“垫片”：
对于较早版本的IE，还要面临一个挑战：他们会拒绝给无法识别的元素应用样式。可以通过js创建元素，骗过IE，让他识别外来元素。
<!--[if lt IE 9]>
<script type="text/javascript">
      document.creatElement(“header”);
</script>
<![endif]-->

拓展：

识别浏览器的特殊注释
<!--[if IE]> 所有的IE可识别 <![endif]-->
<!--[if IE 6]> 仅IE6可识别 <![endif]-->
<!--[if lt IE 6]> IE6以及IE6以下版本可识别 <![endif]-->
<!--[if IE 7]> 仅IE7可识别 <![endif]-->
<!--[if lt IE 7]> IE7以及IE7以下版本可识别 <![endif]-->
<!--[if gt IE 7]> IE7以上版本可识别 <![endif]-->
<!--[if IE 8]> 仅IE8可识别 <![endif]-->
<!--[if IE 9]> 仅IE9可识别 <![endif]-->

less  than
great  than




3、用框架的方法，用到条件注释加JS代码实现
代码如下:
<!--[if lt IE 9]>
    <script src="html5shiv.js"></script>
<![endif]-->
直接加入这一句代码就可实现兼容问题，关于条件注意中的是判断是否小于IE9以下浏览器，如果是就执行这段JS代码 ，如果不是，就忽略掉。至于JS中的链接直接打开进去看看就知道了，也是一大段的代码。
引用网址：http://html5shim.googlecode.com/svn/trunk/html5.js
下载网址：http://tinyurl.com/the-shiv


